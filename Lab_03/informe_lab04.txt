Ingresamos a la consola situada en la ruta de "MongoDB\Data\bin" y ejecutamos el comando "mongod --dbpath c:\MongoDB\Data\db" para poder iniciar nuestra instancia de mongo a cual se accederá durante todo el lab, ver imagen (imagenes_lab04\img1.png)

Ahora en otra consola tambien cituada en la ruta "MongoDB\Data\bin" para poder ejecutar el comando "mongo" y poder ingresar datos a la bd, para lo cual haremos uso de la sentencia "db.producto.insert({nombre:'prueba', descripcion:'este es un producto de prueba', precio:'5'}); con esto ingresaremos un dato, ahora con la sentencia "db.producto.find()" veremos el dato insertado anteriormente, ver imagen (imagenes_lab04\img2.png - imagenes_lab04\img3.png).

En el lab03 nosotros ya habiamos creado un sitio web usando como framework a express, ahora lo tomaremos nuevamente para este lab04 asi que iremos a la ruta de nuestro proyecto para poder abrir una consola desde alli y ejecutar el comando "npm install mongoose --save", ver imagen (imagenes_lab04\img4.png)

Tambien vamos a usar "body-parser" con el cual podemos hacer tratamientos de los elementos que se reciban desde mongo en este caso, ver imagen (imagenes_lab04\img5.png)

Ahora pasaremos a crear un nuevo archivo en la carpeta raiz del proyecto, este será denominado "lab04.js" y le agregaremos algunas librerias, ver imagen (imagenes_lab04\img6.png)

Se ah creado un tratemiento de datos con nuestra coleccion hecha en mongo con el magico CRUD cada linea de las ultimas cuatro (sin contar la abertura del puerto) corresponde a una de estas peticiones, la primera es para mostrarnos los datos que logre extraer, la segunda es para poder agregar mas datos a la colección, la tercera es para poder actualizar los registros, y la última es para poder eliminar algun dato que ya no querramos.

Crearemos una carpeta models donde podremos ubicar nuestros archivos de conexion a MongoDB y lo haremos con el archivo prod.js con el siguiente contenido, ver imagen (imagenes_lab04\img7.png)

Para poder manjar a nuestro antojo la base de datos podemos declarar un Schema, nosotros hemos declarado uno con los campos de producto, nuestro Schema puede soportar varios tipos de datos como String, Buffer, Boolean, etc.

Pasaremos a revisar que efectivamente nos va a devolver algo cuando entremos a la ruta, para lo cual usaremos postman e ingresaremos la ruta "localhost:9090", previamente ya tenemos que tener nuestros servicios activos, ver imagen (imagenes_lab04\img8.png - imagenes_lab04\img9.png)

Vamos a hacer que nuestras funciones, en el archivo prod.js, ahora hagan algo, porque hasta el momento el codigo es vacio cuando se apunta hacia una de estas, ver imagen (imagenes_lab04\img10.png)

Crearemos una vista de login asi que usaremos un middleware en el archivo principal, osea el archivo "lab04.js", ver imagen (imagenes_lab04\img11.png)

Ahora creamos el archivo "login.jade" en la carpeta "views", para poder acceder a este, y lo modificaremos de la siguiente manera, ver imagen (imagenes_lab04\img12.png).

Haremos algunas pruebas con jade y mongo, para ello crearemos otro middleware y una vista llamada "tabla.jade", la cual modificaremos para que quede de la siguiente manera, ver imagen (imagenes_lab04\img13.png - img14.png - img15.png).

Modificaremos la funcion "show" en el archivo "models\prod.js" para que nos muestre esta tabla con los datos que este extraiga, ver imagen (imagenes_lab04\img16.png)

Modificamos la vista "table.jade" para que nos muestre los datos que se extraigan,  para ello modificaremos su contenido, para que luzca de la siguiente manera, ver imagen (imagenes_lab04\img17.png - img18.png)